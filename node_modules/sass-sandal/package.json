{
  "name": "sass-sandal",
  "version": "3.1.1",
  "description": "a basic sass library, included reset css and some basic mixin and so on",
  "keywords": [
    "sass",
    "scss",
    "sandal",
    "sass mixin",
    "sass library"
  ],
  "homepage": "https://github.com/marvin1023/sandal",
  "bugs": {
    "url": "https://github.com/marvin1023/sandal/issues"
  },
  "author": {
    "name": "结一",
    "email": "xuyc_brother@foxmail.com",
    "url": "https://github.com/marvin1023"
  },
  "maintainers": [
    {
      "name": "结一",
      "email": "xuyc_brother@foxmail.com"
    }
  ],
  "contributors": [
    {
      "name": "结一",
      "email": "xuyc_brother@foxmail.com",
      "url": "https://github.com/marvin1023"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:marvin1023/sandal.git"
  },
  "files": [
    "_core.scss",
    "_function.scss",
    "core/",
    "ext/",
    "readme.md"
  ],
  "devDependencies": {},
  "license": "MIT",
  "readme": "# Sandal\n\nsandal取其“檀香”之意，针对移动端站点为前端人员提供了一些基础的重置，常用的`mixin`，如flex布局，等分，水平垂直居中，常用图标等，基于它你可以扩展出更多你需要的组件。\n\n## 如何使用\nsandal，分核心文件和扩展文件两种。其中核心文件包括重置样式，`@mixin`，`%`等方便调用；而扩展文件则提供基础原子类class，图标，网格系统。\n\n核心文件提供两个集合文件以供调用，分别为`_function.scss`， `_core.scss`。两者的区别为function仅提供功能，而core除了提供function的功能，还会会生成一份重置样式\n\n扩展文件有三个，分别为`_icons.scss`，`_helper.scss`，`_grid.scss`，可根据需要调用\n\n### npm 调用\n\n#### 安装\n\n    npm install sass-sandal --save-dev\n\n#### 调用\n\n    @import 'node_modules/sass-sandal/core';\n\n    @import 'node_modules/sass-sandal/function';\n\n    @import 'node_modules/sass-sandal/ext/icons';\n\n    @import 'node_modules/sass-sandal/ext/helper';\n\n    @import 'node_modules/sass-sandal/ext/grid';\n\n### 普通使用\n\n在github上下载[sandal](https://github.com/marvin1023/sandal)，解压拷贝到项目目录\n\n    @import 'sandal/core';\n\n    @import 'sandal/function';\n\n    @import 'sandal/ext/icons';\n\n    @import 'sandal/ext/helper';\n\n    @import 'sandal/ext/grid';\n\n\n## 文件简述\n\nsandal包括两个集合文件（core，function）和两个文件夹（core，ext）。其中core文件夹中为核心基础文件，包括variables，media-queries，mixin，animation，reset；ext文件夹中是一些扩展文件，目前包括svg icons，grid网格系统，helper基础class。\n\n两个集合文件（core，function）导入的都是core中的文件，区别在于core除了提供基本功能之外还会生成一份reset样式，而function则只提供基本功能。至于ext中的文件则属于额外的一些模块扩展，可根据需求导入。\n\n### core文件\n\n#### variables\n负责基础变量的文件，如常用的颜色，字体等变量。\n\n#### media-queries\n负责响应式断点判断的文件，来自paranoida的[sass-mediaqueries](https://github.com/paranoida/sass-mediaqueries)。\n\n#### mixin\n负责功能方面的文件。这里我们大概分成三个部分，一个是混合部分即mixin（主要定义了一些常用的`flex`,`translate`等），一个是placeholder选择器部分即%，最后就是我们的function函数部分。常用的include及extend就是在这里定义的。\n\n#### animation\n\n提供六组简单实用动画：fade-in/out, shrink-in/out, up-in/out, down-in/out，left-in/out，right-in/out。默认不产生样式，通过include调用\n\n### reset\n在[normalize](http://necolas.github.io/normalize.css/)的基础上，根据目前我们大家的使用习惯进行了一些归零行动，及基础文字颜色，clearfix，box-sizing等。\n\n### ext文件\n\n#### helper\n\n提供常用的基础class，如overlay, full-width等\n\n#### grid\n\n移动端的网格系统，分为row和col，具体使用参考[3分钟13行代码搭建sass版移动端网格系统](http://imweb.io/topic/570b33f806f2400432c139b3)\n\n#### icons\n\n分为绘制的icon和svg图标两种，可参考icons文件夹中的`icons.html`\n\n![default icon svg](ext/icons/svg-icons.png)\n\n**绘制icon**\n\n- icon颜色一般使用`currentColor`颜色，可以方便设置标签的color颜色来改变\n- 对于不变的icon，如radio & checkbox直接设置大小，而一些可变的icon，通过标签的伪元素来绘制，标签本身没有设置大小，可根据实际情况设置大小（设置大点可扩大点击范围），伪元素绘制的会保持水平垂直居中\n\n**svg 图标调用**\n\n从[icomoon](https://icomoon.io/)提取了几个常用的svg图标，使用方法可参考ext/icons/icons.html，这里以home图标为例：\n\n\t<svg class=\"icon icon-home\"><use xlink:href=\"icons.svg#icon-home\"></use></svg>\n\n如需改变颜色，可以通过设置css的fill属性来定义\n\n\t.icon-home{\n\t\tfill:#f00;\n\t}\n\n最后可根据实际需求对icons.svg进行增删改， 然后使用。\n\n注：使用时请把icons.svg拷贝至images目录或其他目录，方便调用\n\n\n\n",
  "readmeFilename": "readme.md",
  "gitHead": "4c332860b0ff610e6e48851b52d5bcb6186e504d",
  "_id": "sass-sandal@3.1.1",
  "scripts": {},
  "_shasum": "4a601d25b6cfff1c5acdae56fc00c71fab7d0d68",
  "_from": "sass-sandal@>=3.1.0 <4.0.0"
}
